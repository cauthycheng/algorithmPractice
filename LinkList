#include <QCoreApplication>
#include <iostream>
#include <stdio.h>

using namespace std;

typedef struct LNode
{
    int data;
    struct LNode *next;
}LNode,*LinkList;

void createList(LinkList &L,int n )
{

   LinkList p =NULL,q;
   L=(LinkList)malloc(sizeof(LNode));//generate head node;
   cout << " L->data:  " <<  L->data <<endl;
   L->next=NULL;
   q=L;
   cout<<"please input num : " <<endl;

   for(int i=0;i<n;i++)
   {
       p=(LinkList)malloc(sizeof(LNode));
       cin>> p->data;
       q->next=p;
       q=q->next;
   }
   q->next=NULL;
}
void ListDelete(LinkList L,int i)
{
        // 在带头结点的单链线性表L中，删除第i个元素
        int j = 0;
        LinkList p = L, q;
        while (p->next && j < i - 1) // 寻找第i个结点,并令p指向其前趋
        {
            p = p->next;
            j++;
        }
        if (!p->next || j > i - 1) // 删除位置不合理
            cout << "删除位置不合理！" << endl;
        else{
            q = p->next; // 删除并释放结点
            p->next = q->next;
            free(q);
            cout << "删除成功！" << endl;
            }
}

void printList(LinkList L)
{
    LNode *p;
    p=L->next;
    cout<<endl<<"L";
    while(p)
    {
       cout<<"->"<<p->data;
       p=p->next;
    }
    cout<<endl;
}



int main(void)
{
    printf("hello world");

    int n;//input num count;

   cout<<"please input num count: " <<endl;
   cin >>n;
   LinkList L;
   createList(L,n);
   ListDelete(L,5);

   printList(L);


}

